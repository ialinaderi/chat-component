import React, { HTMLAttributes, useEffect, useRef } from "react";
import { Components } from "react-markdown";
import hljs from "highlight.js";
import "highlight.js/styles/github-dark.min.css";

export const components: Partial<Components> = {
  a: (props) => <a {...props} />,
  abbr: (props) => <span>{props.children}</span>,
  address: (props) => <span>{props.children}</span>,
  area: (props) => <span>{props.children}</span>,
  article: (props) => <span>{props.children}</span>,
  aside: (props) => <span>{props.children}</span>,
  audio: (props) => <span>{props.children}</span>,
  b: (props) => <span>{props.children}</span>,
  base: (props) => <span>{props.children}</span>,
  bdi: (props) => <span>{props.children}</span>,
  bdo: (props) => <span>{props.children}</span>,
  big: (props) => <span>{props.children}</span>,
  blockquote: (props) => <span>{props.children}</span>,
  body: (props) => <span>{props.children}</span>,
  br: (props) => <br>{props.children}</br>,
  button: (props) => <span>{props.children}</span>,
  canvas: (props) => <span>{props.children}</span>,
  caption: (props) => <span>{props.children}</span>,
  center: (props) => <span>{props.children}</span>,
  cite: (props) => <span>{props.children}</span>,
  code: (props) => <CodeElement {...props} />,
  col: (props) => <span>{props.children}</span>,
  colgroup: (props) => <span>{props.children}</span>,
  data: (props) => <span>{props.children}</span>,
  datalist: (props) => <span>{props.children}</span>,
  dd: (props) => <span>{props.children}</span>,
  del: (props) => <span>{props.children}</span>,
  details: (props) => <span>{props.children}</span>,
  dfn: (props) => <span>{props.children}</span>,
  dialog: (props) => <span>{props.children}</span>,
  div: (props) => <span>{props.children}</span>,
  dl: (props) => <span>{props.children}</span>,
  dt: (props) => <span>{props.children}</span>,
  em: (props) => <span>{props.children}</span>,
  embed: (props) => <span>{props.children}</span>,
  fieldset: (props) => <span>{props.children}</span>,
  figcaption: (props) => <span>{props.children}</span>,
  figure: (props) => <span>{props.children}</span>,
  footer: (props) => <span>{props.children}</span>,
  form: (props) => <span>{props.children}</span>,
  h1: (props) => <span>{props.children}</span>,
  h2: (props) => <span>{props.children}</span>,
  h3: (props) => <span>{props.children}</span>,
  h4: (props) => <span>{props.children}</span>,
  h5: (props) => <span>{props.children}</span>,
  h6: (props) => <span>{props.children}</span>,
  head: (props) => <span>{props.children}</span>,
  header: (props) => <span>{props.children}</span>,
  hgroup: (props) => <span>{props.children}</span>,
  hr: (props) => <span>{props.children}</span>,
  html: (props) => <span>{props.children}</span>,
  i: (props) => <span>{props.children}</span>,
  iframe: (props) => <span>{props.children}</span>,
  img: (props) => <span>{props.children}</span>,
  input: (props) => <span>{props.children}</span>,
  ins: (props) => <span>{props.children}</span>,
  kbd: (props) => <span>{props.children}</span>,
  keygen: (props) => <span>{props.children}</span>,
  label: (props) => <span>{props.children}</span>,
  legend: (props) => <span>{props.children}</span>,
  li: (props) => <span>- {props.children}</span>,
  link: (props) => <span>{props.children}</span>,
  main: (props) => <span>{props.children}</span>,
  map: (props) => <span>{props.children}</span>,
  mark: (props) => <span>{props.children}</span>,
  menu: (props) => <span>{props.children}</span>,
  menuitem: (props) => <span>{props.children}</span>,
  meta: (props) => <span>{props.children}</span>,
  meter: (props) => <span>{props.children}</span>,
  nav: (props) => <span>{props.children}</span>,
  noindex: (props) => <span>{props.children}</span>,
  noscript: (props) => <span>{props.children}</span>,
  object: (props) => <span>{props.children}</span>,
  ol: (props) => <>{props.children}</>,
  optgroup: (props) => <span>{props.children}</span>,
  option: (props) => <span>{props.children}</span>,
  output: (props) => <span>{props.children}</span>,
  p: (props) => <p>{props.children}</p>,
  param: (props) => <span>{props.children}</span>,
  picture: (props) => <span>{props.children}</span>,
  pre: (props) => <PreElement>{props.children}</PreElement>,
  progress: (props) => <span>{props.children}</span>,
  q: (props) => <span>{props.children}</span>,
  rp: (props) => <span>{props.children}</span>,
  rt: (props) => <span>{props.children}</span>,
  ruby: (props) => <span>{props.children}</span>,
  s: (props) => <span>{props.children}</span>,
  samp: (props) => <span>{props.children}</span>,
  search: (props) => <span>{props.children}</span>,
  slot: (props) => <span>{props.children}</span>,
  script: (props) => <span>{props.children}</span>,
  section: (props) => <span>{props.children}</span>,
  select: (props) => <span>{props.children}</span>,
  small: (props) => <span>{props.children}</span>,
  source: (props) => <span>{props.children}</span>,
  span: (props) => <span>{props.children}</span>,
  strong: (props) => <span>{props.children}</span>,
  style: (props) => <span>{props.children}</span>,
  sub: (props) => <span>{props.children}</span>,
  summary: (props) => <span>{props.children}</span>,
  sup: (props) => <span>{props.children}</span>,
  table: (props) => <span>{props.children}</span>,
  template: (props) => <span>{props.children}</span>,
  tbody: (props) => <span>{props.children}</span>,
  td: (props) => <span>{props.children}</span>,
  textarea: (props) => <span>{props.children}</span>,
  tfoot: (props) => <span>{props.children}</span>,
  th: (props) => <span>{props.children}</span>,
  thead: (props) => <span>{props.children}</span>,
  time: (props) => <span>{props.children}</span>,
  title: (props) => <span>{props.children}</span>,
  tr: (props) => <span>{props.children}</span>,
  track: (props) => <span>{props.children}</span>,
  u: (props) => <span>{props.children}</span>,
  ul: (props) => <span>{props.children}</span>,
  video: (props) => <span>{props.children}</span>,
  wbr: (props) => <span>{props.children}</span>,
  webview: (props) => <span>{props.children}</span>,
  //  (props) => <span>{props.children}</span>,
  svg: (props) => <span>{props.children}</span>,
  animate: (props) => <span>{props.children}</span>,
  animateMotion: (props) => <span>{props.children}</span>,
  animateTransform: (props) => <span>{props.children}</span>,
  circle: (props) => <span>{props.children}</span>,
  clipPath: (props) => <span>{props.children}</span>,
  defs: (props) => <span>{props.children}</span>,
  desc: (props) => <span>{props.children}</span>,
  ellipse: (props) => <span>{props.children}</span>,
  feBlend: (props) => <span>{props.children}</span>,
  feColorMatrix: (props) => <span>{props.children}</span>,
  feComponentTransfer: (props) => <span>{props.children}</span>,
  feComposite: (props) => <span>{props.children}</span>,
  feConvolveMatrix: (props) => <span>{props.children}</span>,
  feDiffuseLighting: (props) => <span>{props.children}</span>,
  feDisplacementMap: (props) => <span>{props.children}</span>,
  feDistantLight: (props) => <span>{props.children}</span>,
  feDropShadow: (props) => <span>{props.children}</span>,
  feFlood: (props) => <span>{props.children}</span>,
  feFuncA: (props) => <span>{props.children}</span>,
  feFuncB: (props) => <span>{props.children}</span>,
  feFuncG: (props) => <span>{props.children}</span>,
  feFuncR: (props) => <span>{props.children}</span>,
  feGaussianBlur: (props) => <span>{props.children}</span>,
  feImage: (props) => <span>{props.children}</span>,
  feMerge: (props) => <span>{props.children}</span>,
  feMergeNode: (props) => <span>{props.children}</span>,
  feMorphology: (props) => <span>{props.children}</span>,
  feOffset: (props) => <span>{props.children}</span>,
  fePointLight: (props) => <span>{props.children}</span>,
  feSpecularLighting: (props) => <span>{props.children}</span>,
  feSpotLight: (props) => <span>{props.children}</span>,
  feTile: (props) => <span>{props.children}</span>,
  feTurbulence: (props) => <span>{props.children}</span>,
  filter: (props) => <span>{props.children}</span>,
  foreignObject: (props) => <span>{props.children}</span>,
  g: (props) => <span>{props.children}</span>,
  image: (props) => <span>{props.children}</span>,
  line: (props) => <span>{props.children}</span>,
  linearGradient: (props) => <span>{props.children}</span>,
  marker: (props) => <span>{props.children}</span>,
  mask: (props) => <span>{props.children}</span>,
  metadata: (props) => <span>{props.children}</span>,
  mpath: (props) => <span>{props.children}</span>,
  path: (props) => <span>{props.children}</span>,
  pattern: (props) => <span>{props.children}</span>,
  polygon: (props) => <span>{props.children}</span>,
  polyline: (props) => <span>{props.children}</span>,
  radialGradient: (props) => <span>{props.children}</span>,
  rect: (props) => <span>{props.children}</span>,
  stop: (props) => <span>{props.children}</span>,
  switch: (props) => <span>{props.children}</span>,
  symbol: (props) => <span>{props.children}</span>,
  text: (props) => <span>{props.children}</span>,
  textPath: (props) => <span>{props.children}</span>,
  tspan: (props) => <span>{props.children}</span>,
  use: (props) => <span>{props.children}</span>,
  view: (props) => <span>{props.children}</span>,
};

const CodeElement = (props: HTMLAttributes<HTMLElement>) => {
  // const codeRef = useRef<HTMLElement>(null);
  // const [changed, setChanged] = useState(false);
  // useEffect(() => {
  // 	if (codeRef.current && !changed) {
  // 		hljs.highlightElement(codeRef.current);
  // 		setChanged(true);
  // 	}
  // }, [codeRef]);
  return <code {...props} />;
};

const PreElement = (props: HTMLAttributes<HTMLElement>) => {
  const codeRef = useRef<HTMLPreElement>(null);
  useEffect(() => {
    if (codeRef.current) {
      hljs.highlightElement(codeRef.current);
    }
  }, [codeRef]);
  return (
    <pre
      dir={"ltr"}
      {...props}
      ref={codeRef}
      className={props.className + " rounded p-4"}
    />
  );
};

export default CodeElement;
